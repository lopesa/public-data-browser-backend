// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model DataSource {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  url         String
  lastModified  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  modelName   String  @unique
}

model DepartmentOfAgricultureDataItem {
  id          String   @id @default(uuid())
  identifier  String?   @unique
  accessLevel String?
  contactPoint Json?
  programCode Json?
  description String? @db.LongText
  title       String? @db.VarChar(500)
  distribution Json?
  license     String?
  bureauCode  Json?
  modified    Json?
  publisher   Json?
  accrualPeriodicity String?
  keyword     Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  describedBy Json?
  issued Json?
  language Json?
  rights String?
  spatial String? @db.LongText
  dataQuality Boolean?
  describedByType String?
  landingPage String? @db.VarChar(500)
  references Json?
  theme Json?
  systemOfRecords String?
  isPartOf String?
  @@index(fields: [title], map: "title_index")
}

model DepartmentOfEnergyDataItem {
  id          String   @id @default(uuid())
  type String?
  identifier  String?   @unique
  accessLevel String?
  contactPoint Json?
  programCode Json?
  description String? @db.LongText
  title       String? @db.VarChar(500)
  distribution Json?
  license     String?
  bureauCode  Json?
  modified    Json?
  publisher   Json?
  accrualPeriodicity String?
  keyword     Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  describedBy Json?
  issued Json?
  language Json?
  rights String?  @db.VarChar(500)
  spatial String? @db.LongText
  conformsTo Json?
  temporal String?
  dataQuality Boolean?
  describedByType String?
  landingPage String? @db.VarChar(500)
  references Json?
  theme Json?
  systemOfRecords String?
  isPartOf String?
  @@index(fields: [title], map: "title_index")
}

model BookmarkItem {
  id          String   @id @default(uuid())
  originalSource String
  originalId String @unique
  type String?
  identifier  String?   @unique
  accessLevel String?
  contactPoint Json?
  programCode Json?
  description String? @db.LongText
  title       String? @db.VarChar(500)
  distribution Json?
  license     String?
  bureauCode  Json?
  modified    Json?
  publisher   Json?
  accrualPeriodicity String?
  keyword     Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  describedBy Json?
  issued Json?
  language Json?
  rights String?  @db.VarChar(500)
  spatial String? @db.LongText
  conformsTo Json?
  temporal String?
  dataQuality Boolean?
  describedByType String?
  landingPage String? @db.VarChar(500)
  references Json?
  theme Json?
  systemOfRecords String?
  isPartOf String?
  users User[]
  @@index(fields: [title], map: "title_index")
}


model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  bookmarks BookmarkItem[]
}